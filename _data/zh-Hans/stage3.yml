- title: JavaScript 中的历史 RegExp 特性
  id: proposal-regexp-legacy-features
  presented:
    - date: May&#xA0;2017
      url: >-
        https://github.com/tc39/notes/blob/master/meetings/2017-05/may-25.md#15ia-regexp-legacy-features-for-stage-3
  has_specification: false
  description: 该提案规范了 JavaScript 中已废弃的 RegExp 特性，即构造函数的静态属性以及 RegExp.prototype.compile 方法。
  authors:
    - Claude Pache
  champions:
    - Mark Miller
    - Claude Pache
  tests:
    - 'https://github.com/tc39/test262/pull/2650'
- title: 私有类方法和访问器
  id: proposal-private-methods
  example: |-
    class Counter extends HTMLElement {
      #xValue = 0;
      get #x() { return #xValue; }
      set #x(value) {
        this.#xValue = value;
        window.requestAnimationFrame(this.#render.bind(this));
      }
      #clicked() {
        this.#x++;
      }
      constructor() {
        super();
        this.onclick = this.#clicked.bind(this);
      }
      connectedCallback() { this.#render(); }
      #render() {
        this.textContent = this.#x.toString();
      }
    }
    window.customElements.define(&#x27;num-counter&#x27;, Counter);
  presented:
    - date: January&#xA0;2019
      url: >-
        https://github.com/tc39/notes/blob/master/meetings/2019-01/jan-30.md#private-fields-and-methods-refresher
  has_specification: true
  description: 保持一个类的内部状态和内部行为的私有性，可以让库作者提供一个清晰、稳定的接口，允许在内部重构而不会因为私有接口被意外使用而破坏兼容性。
  authors:
    - Daniel Ehrenberg
  champions:
    - Daniel Ehrenberg
    - Kevin Gibbons
  tests:
    - >-
      https://github.com/tc39/test262/pulls?q=is%3Apr+is%3Aclosed+private+methods
- title: 类的实例字段和私有实例字段。
  id: proposal-class-fields
  example: |-
    class X {
      #foo;
      method() {
        console.log(this.#foo)
      }
    }
  presented:
    - date: March&#xA0;2019
      url: >-
        https://github.com/tc39/notes/blob/master/meetings/2020-03/march-31.md#add-support-for-optionalchainprivateidentifier-in-class-features-proposals
  has_specification: true
  description: 该提案合并了公开字段和私有字段的提案，借鉴了先前的 Orthogonal Classes 和 Class Evaluation Order 提案。
  authors:
    - Daniel Ehrenberg
    - Kevin Gibbons
  champions:
    - Daniel Ehrenberg
    - Jeff Morrison
    - Kevin Smith
    - Kevin Gibbons
  tests:
    - 'https://github.com/tc39/test262/pulls?q=is%3Apr+is%3Aclosed+private+fields'
- title: 静态类字段和私有静态方法
  id: proposal-static-class-features
  example: |-
    class ColorFinder {
      static #red = &#x22;#ff0000&#x22;;
      static #green = &#x22;#00ff00&#x22;;
      static #blue = &#x22;#0000ff&#x22;;

      static colorName(name) {
        switch (name) {
          case &#x22;red&#x22;: return ColorFinder.#red;
          case &#x22;blue&#x22;: return ColorFinder.#blue;
          case &#x22;green&#x22;: return ColorFinder.#green;
          default: throw new RangeError(&#x22;unknown color&#x22;);
        }
      }

      // Somehow use colorName
    }
  presented:
    - date: January&#xA0;2019
      url: >-
        https://github.com/tc39/notes/blob/master/meetings/2019-01/jan-30.md#private-fields-and-methods-refresher
  has_specification: true
  description: 该提案在先前的类字段和私有方法提案的基础上，为 JavaScript 类增加三个新特性。
  authors:
    - Daniel Ehrenberg
    - Kevin Gibbons
    - Jeff Morrison
    - Kevin Smith
  champions:
    - Shu-Yu Guo
    - Daniel Ehrenberg
  tests:
    - 'https://github.com/tc39/test262/pulls?q=is%3Apr+is%3Aclosed+static+fields'
- title: Hashbang 语法
  id: proposal-hashbang
  example: |-
    #!/usr/bin/env node
    // in the Module Goal
    export {};
    console.log(1);
  presented:
    - date: November&#xA0;2018
      url: >-
        https://github.com/tc39/notes/blob/master/meetings/2018-11/nov-28.md#hash-bang-grammar
  has_specification: true
  description: 该提案意在配合一些允许/需要使用 Hashbang 的 JS 环境。在这种环境中，目前它们需要先删除 hashbang 以生成有效的 JS 代码。该提案将统一和规范这种做法。
  authors:
    - Bradley Farias
  champions:
    - Bradley Farias
  tests:
    - 'https://github.com/tc39/test262/pull/2065'
- title: 顶层 <code>await</code>
  id: proposal-top-level-await
  example: |-
    // file.html
    &#x3C;script type=module src=&#x22;a.mjs&#x22;&#x3E;&#x3C;/script&#x3E;
    // a.mjs
    await import(&#x22;./b.mjs&#x22;);
    // b.mjs
    await import(&#x22;./a.mjs&#x22;);
  presented:
    - date: June&#xA0;2019
      url: >-
        https://github.com/tc39/notes/blob/master/meetings/2019-06/june-6.md#top-level-await-for-stage-3
  has_specification: true
  description: 该提案让我们依靠模块系统本身来处理所有这些 Promise，并确保模块以正确方式加载。
  authors:
    - Myles Borins
  champions:
    - Myles Borins
  tests:
    - 'https://github.com/tc39/test262/pull/2274'
- title: RegExp Match Indices
  id: proposal-regexp-match-indices
  example: |-
    const re1 = /a+(?&#x3C;Z&#x3E;z)?/;
    // indices are relative to start of the input string:
    const s1 = &#x22;xaaaz&#x22;;
    const m1 = re1.exec(s1);
    m1.indices[0][0] === 1;
    m1.indices[0][1] === 5;
    s1.slice(...m1.indices[0]) === &#x22;aaaz&#x22;;
    m1.indices[1][0] === 4;
    m1.indices[1][1] === 5;
    s1.slice(...m1.indices[1]) === &#x22;z&#x22;;
    m1.indices.groups[&#x22;Z&#x22;][0] === 4;
    m1.indices.groups[&#x22;Z&#x22;][1] === 5;
    s1.slice(...m1.indices.groups[&#x22;Z&#x22;]) === &#x22;z&#x22;;
    // capture groups that are not matched return &#x60;undefined&#x60;:
    const m2 = re1.exec(&#x22;xaaay&#x22;);
    m2.indices[1] === undefined;
    m2.indices.groups[&#x22;Z&#x22;] === undefined;
  presented:
    - date: December&#xA0;2019
      url: >-
        https://github.com/tc39/notes/blob/master/meetings/2019-12/december-3.md#regexp-match-indices-performance-feedback
  has_specification: false
  description: 该提案提供了 RegExp 中捕获的子串相对于输入字符串开始的起始和结束索引的附加信息。
  authors:
    - Ron Buckton
  champions:
    - Ron Buckton
  tests:
    - 'https://github.com/tc39/test262/pull/2309'
- title: <code>Atomics.waitAsync</code>
  id: proposal-atomics-wait-async
  presented:
    - date: December&#xA0;2019
      url: >-
        https://github.com/tc39/notes/blob/master/meetings/2019-12/december-4.md#atomicswaitasync-for-stage-3
  has_specification: true
  description: 该提案为 Atomics 添加一个异步的 <code>wait</code>，用于不允许阻塞线程的环境。
  authors:
    - Lars Hansen
  champions:
    - Shu-yu Guo
    - Lars Hansen
  tests:
    - 'https://github.com/tc39/test262/issues/2511'
- title: <code>.at()</code>
  id: proposal-relative-indexing-method
  example: |-
    var list = ["apple", "orange", "banana"];
    list.at(-1) // banana, using negative inndex
    list.at(0)  // apple
    list.at(1)  // orange
    list.at(2)  // banana
  presented:
    - date: September&#xA0;2020
      url: at
  has_specification: true
  description: 该提案计划在所有可索引类（<code>Array</code>、<code>String</code>、<code>TypedArray</code>）中添加一个<code>.at()</code>方法。该方法允许负数索引。
  authors:
    - Shu-yu Guo
    - Tab Atkins
  champions:
    - Shu-yu Guo
    - Tab Atkins
  tests:
    - 'https://github.com/tc39/test262/pull/2812'
- title: import 断言
  id: proposal-import-assertions
  example: >-
    new Worker(&#x22;foo.wasm&#x22;, { type: &#x22;module&#x22;, assert: { type:
    &#x22;webassembly&#x22; } });
  presented:
    - date: September&#xA0;2020
      url: import-assertions
  has_specification: true
  description: 该提案为 `import` 语句添加了断言语法。如果模块不符合期望的断言，则导入会失败。
  authors:
    - Myles Borins
    - Sven Sauleau
    - Dan Clark
    - Daniel Ehrenberg
  champions:
    - Myles Borins
    - Sven Sauleau
    - Dan Clark
    - Daniel Ehrenberg
